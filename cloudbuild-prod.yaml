steps:
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Google cloud docker auth"
    entrypoint: sh
    args:
    - "-c"
    - |
      gcloud auth configure-docker europe-west2-docker.pkg.dev

  - name: docker
    id: "Docker build and push"
    entrypoint: sh
    args:
      - "-c"
      - |
        docker build -t "europe-west2-docker.pkg.dev/ons-sds-ci/sds-perm/${PROJECT_ID}:latest" -t "europe-west2-docker.pkg.dev/ons-sds-ci/sds-perm/${PROJECT_ID}:${TAG_NAME}" .
        docker push "europe-west2-docker.pkg.dev/ons-sds-ci/sds-perm/${PROJECT_ID}:latest"
        docker push "europe-west2-docker.pkg.dev/ons-sds-ci/sds-perm/${PROJECT_ID}:${TAG_NAME}"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Run container"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "sds",
        "--image",
        "europe-west2-docker.pkg.dev/ons-sds-ci/sds-perm/${PROJECT_ID}:latest",
        "--region",
        "europe-west2",
        "--allow-unauthenticated",
        "--ingress",
        "internal-and-cloud-load-balancing",
        "--update-env-vars",
        "SDS_APPLICATION_VERSION=${TAG_NAME}",
        "--cpu-boost",
        "--session-affinity",
        "--min-instances",
        "2",
        "--max-instances",
        "500",
        "--concurrency",
        "1",
      ]

options:
  logging: CLOUD_LOGGING_ONLY

# Store images in Google Artifact Registry
images:
  - europe-west2-docker.pkg.dev/ons-sds-ci/sds-perm/${PROJECT_ID}:${TAG_NAME}
  - europe-west2-docker.pkg.dev/ons-sds-ci/sds-perm/${PROJECT_ID}:latest