steps:
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Google cloud docker auth"
    entrypoint: sh
    args:
    - "-c"
    - |
      gcloud auth configure-docker europe-west2-docker.pkg.dev

  - name: docker
    id: "Docker build and push"
    entrypoint: sh
    args:
      - "-c"
      - |
        docker build -t "europe-west2-docker.pkg.dev/ons-sds-dns/sds/${PROJECT_ID}:latest" -t "europe-west2-docker.pkg.dev/${PROJECT_ID}/sds/${PROJECT_ID}:${TAG_NAME}" .
        docker push "europe-west2-docker.pkg.dev/ons-sds-dns/sds/${PROJECT_ID}:latest"
        docker push "europe-west2-docker.pkg.dev/ons-sds-dns/sds/${PROJECT_ID}:${TAG_NAME}"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Run container"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "sds",
        "--image",
        "europe-west2-docker.pkg.dev/ons-sds-dns/sds/${PROJECT_ID}:latest",
        "--region",
        "europe-west2",
        "--allow-unauthenticated",
        "--ingress",
        "internal-and-cloud-load-balancing",
        "--update-env-vars",
        "SDS_APPLICATION_VERSION=${TAG_NAME}",
      ]

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Deploy cloud function"
    entrypoint: sh
    args:
      - "-c"
      - |
        cd src/app/
        gcloud functions deploy new-dataset-function \
        --allow-unauthenticated \
        --gen2 \
        --ingress-settings=internal-and-gclb \
        --runtime=python311 \
        --region=europe-west2 \
        --source=. \
        --entry-point=new_dataset \
        --trigger-event-filters="type=google.cloud.storage.object.v1.finalized" \
        --trigger-event-filters="bucket=${_DATASET_BUCKET_NAME}" \
        --set-env-vars="DATASET_BUCKET_NAME=${_DATASET_BUCKET_NAME},SCHEMA_BUCKET_NAME=${_SCHEMA_BUCKET_NAME},CONF=cloud-build,AUTODELETE_DATASET_BUCKET_FILE=${_AUTODELETE_DATASET_BUCKET_FILE},RETAIN_DATASET_FIRESTORE=${_RETAIN_DATASET_FIRESTORE},LOG_LEVEL=${_LOG_LEVEL},PROJECT_ID=${PROJECT_ID},PUBLISH_SCHEMA_TOPIC_ID=${_PUBLISH_SCHEMA_TOPIC_ID},PUBLISH_DATASET_TOPIC_ID=${_PUBLISH_DATASET_TOPIC_ID},FIRESTORE_DB_NAME=${_FIRESTORE_DB_NAME},SURVEY_MAP_URL=${_SURVEY_MAP_URL}"

options:
  logging: CLOUD_LOGGING_ONLY

# Store images in Google Artifact Registry
images:
  - europe-west2-docker.pkg.dev/ons-sds-dns/sds/${PROJECT_ID}:${TAG_NAME}
  - europe-west2-docker.pkg.dev/ons-sds-dns/sds/${PROJECT_ID}:latest
