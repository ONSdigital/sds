steps:
  # Docker Auth
  - name: 'gcr.io/cloud-builders/gcloud'
    id: "google cloud docker auth"
    entrypoint: sh
    args:
    - "-c"
    - |
      gcloud auth configure-docker europe-west2-docker.pkg.dev

  # Docker Pull Image from dockerhub, tag, push and deploy to cloudrun
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Pull image from dockerhub'
    args: [ 'pull', 'onsdigital/sds' ]
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Tag the image with SHA'
    args: [ 'tag', 'onsdigital/sds:latest', 'gcr.io/${_PROJECT_ID}/sds/sds-preprod:$SHORT_SHA' ]
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push SHA Tagged Image to GCR'
    args: [ 'push', 'gcr.io/${_PROJECT_ID}/sds/sds-preprod:$SHORT_SHA' ]
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy the image to cloudrun'
    args: [ 'run', 'deploy', 'sds', '--image', 'gcr.io/${_PROJECT_ID}/sds/sds-preprod:$SHORT_SHA',
            '--region', 'europe-west2', '--allow-unauthenticated', '--ingress', 'internal-and-cloud-load-balancing' ]

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Show image vulnerabilities'
    entrypoint: sh
    args:
      - '-c'
      - |
        gcloud alpha container images describe gcr.io/${_PROJECT_ID}/sds/sds-preprod:$SHORT_SHA \
        --show-package-vulnerability

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: "Deploy cloud function"
    entrypoint: sh
    args:
      - '-c'
      - |
        cd src/app/
        gcloud functions deploy new-dataset-function \
        --allow-unauthenticated \
        --gen2 \
        --ingress-settings=internal-and-gclb \
        --runtime=python311 \
        --region=europe-west2 \
        --source=. \
        --entry-point=new_dataset \
        --trigger-event-filters="type=google.cloud.storage.object.v1.finalized" \
        --trigger-event-filters="bucket=${_DATASET_BUCKET_NAME}" \
        --set-env-vars="DATASET_BUCKET_NAME=${_DATASET_BUCKET_NAME},SCHEMA_BUCKET_NAME=${_SCHEMA_BUCKET_NAME},CONF=cloud-build,AUTODELETE_DATASET_BUCKET_FILE=${_AUTODELETE_DATASET_BUCKET_FILE},LOG_LEVEL=${_LOG_LEVEL},PROJECT_ID=${_PROJECT_ID},PUBLISH_SCHEMA_TOPIC_ID=${_PUBLISH_SCHEMA_TOPIC_ID},PUBLISH_DATASET_TOPIC_ID=${_PUBLISH_DATASET_TOPIC_ID}"

options:
  logging: CLOUD_LOGGING_ONLY

# Store images in Google Artifact Registry
images:
  - europe-west2-docker.pkg.dev/${_PROJECT_ID}/sds/sds-preprod:${SHORT_SHA}
  - europe-west2-docker.pkg.dev/${_PROJECT_ID}/sds/sds-preprod:${TAG_NAME}
  - europe-west2-docker.pkg.dev/${_PROJECT_ID}/sds/sds-preprod:latest
