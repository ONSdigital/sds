steps:
  - name: python
    id: "Setup Python"
    entrypoint: pip
    args: [ "install", "-r", "requirements.txt" , "--user"]
  - name: python
    id: "black"
    entrypoint: python
    args: ["-m", "black", "src", "--check"]
  - name: python
    id: "isort"
    entrypoint: python
    args: ["-m", "isort", "src", "--check-only",  "--profile", "black"]
  - name: python
    id: "flake8"
    entrypoint: python
    args: ["-m", "flake8", "src", "--max-line-length=127"]
  - name: python
    id: "pytest"
    entrypoint: python
    env: ['PYTHONPATH=../app']
    dir: "src/unit_tests"
    args: ["-m", "pytest", "--cov=../app", "."]
  - name: python
    id: "coverage"
    dir: "src/unit_tests"
    entrypoint: python
    args: ["-m", "coverage", "report", "--fail-under=90"]
  - name: docker
    id: build_and_push
    entrypoint: sh
    args:
      - '-c'
      - |
        docker build -t "europe-west2-docker.pkg.dev/${_PROJECT}/sds/sds:$SHORT_SHA" .
        docker push "europe-west2-docker.pkg.dev/${_PROJECT}/sds/sds:$SHORT_SHA"
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [ 'run', 'deploy', 'sds', '--image', 'europe-west2-docker.pkg.dev/${_PROJECT}/sds/sds:$SHORT_SHA',
            '--region', 'europe-west2' ]
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: "Deploy cloud function"
    entrypoint: sh
    args:
      - '-c'
      - |
        cd src/app/
        gcloud functions deploy new-dataset-function \
        --gen2 \
        --runtime=python311 \
        --region=europe-west2 \
        --source=. \
        --entry-point=new_dataset \
        --trigger-event-filters="type=google.cloud.storage.object.v1.finalized" \
        --trigger-event-filters="bucket=${_DATASET_BUCKET}"
  - name: 'gcr.io/cloud-builders/gcloud'
    id: "Get token"
    entrypoint: sh
    args:
      - '-c'
      - |
        gcloud auth print-identity-token --impersonate-service-account=${_CLOUDBUILD_SA} > /workspace/token
        curl -H "Authorization: Bearer $(cat /workspace/token)" ${_API_URL}/docs
  - name: python
    id: "Run integration test"
    entrypoint: sh
    args:
      - '-c'
      - |
        export ACCESS_TOKEN=$(cat /workspace/token)
        export API_URL=$_API_URL
        export DATASET_BUCKET=$_DATASET_BUCKET
        cd src/integration_tests
        python -m pytest integration_tests.py
options:
  logging: CLOUD_LOGGING_ONLY