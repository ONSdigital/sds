openapi: 3.0.2
info:
  title: Supplementary Data Service
  description: Open api schema for SDS
  version: 1.0.0
paths:
  /v1/unit_data:
    get:
      summary: Get Unit Supplementary Data
      description: 'Retrieve supplementary data for a particular unit given the dataset
        id and unit id, return 404 if no data is returned.


        Parameters:

        dataset_id (str): The unique id of the dataset being queried.

        unit_id (str): The unit id of the particular unit on the data being queried.'
      operationId: get_unit_supplementary_data_v1_unit_data_get
      parameters:
      - required: true
        schema:
          title: Dataset Id
          type: string
        name: dataset_id
        in: query
      - required: true
        schema:
          title: Unit Id
          type: string
        name: unit_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Validation has failed
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Unable to process request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: No unit data found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/dataset_metadata:
    get:
      summary: Get Dataset Metadata Collection
      description: 'Retrieve the matching dataset metadata, given the survey_id and
        period_id.


        Parameters:

        survey_id (str): The survey id of the dataset being queried.

        period_id (str): The period id of the dataset being queried.'
      operationId: get_dataset_metadata_collection_v1_dataset_metadata_get
      parameters:
      - required: false
        schema:
          title: Survey Id
          type: string
        name: survey_id
        in: query
      - required: false
        schema:
          title: Period Id
          type: string
        name: period_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Dataset Metadata Collection V1 Dataset Metadata
                  Get
                type: array
                items:
                  $ref: '#/components/schemas/DatasetMetadata'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Invalid search parameters provided
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Unable to process request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: No datasets found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/schema:
    get:
      summary: Get Schema From Bucket
      description: "Gets the filename of the bucket schema metadata and uses that\
        \ to retrieve the schema metadata\nwith specific survey id and version from\
        \ the bucket. Latest version schema will be retrieved\nif version is omitted\n\
        \nParameters:\nsurvey_id (str): survey id of the schema metadata.\nversion\
        \ (str) (optional): version of the survey.\nschema_firebase_repository (SchemaFirebaseRepository):\
        \ injected dependency for\n    interacting with the schema collection in firestore.\n\
        schema_processor_service (SchemaProcessorService): injected dependency for\n\
        \    interacting with the schema collection in firestore."
      operationId: get_schema_from_bucket_v1_schema_get
      parameters:
      - required: false
        schema:
          title: Survey Id
          type: string
        name: survey_id
        in: query
      - required: false
        schema:
          title: Version
          type: string
        name: version
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Schema From Bucket V1 Schema Get
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Invalid search provided
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Unable to process request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: No schema found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      summary: Post Schema
      description: 'Posts the schema metadata to be processed.


        Parameters:

        survey_id (str): survey_id of the schema

        schema (dict): schema to be processed in JSON format.

        schema_processor_service (SchemaProcessorService): injected processor service
        for processing the schema.'
      operationId: post_schema_v1_schema_post
      parameters:
      - required: true
        schema:
          title: Survey Id
          type: string
        name: survey_id
        in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Schema
              type: object
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaMetadata'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Validation has failed
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Unable to process request
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/schema:
    get:
      summary: Get Schema From Bucket With Guid
      description: "Gets the filename of the bucket schema metadata and uses that\
        \ to retrieve the schema metadata\nwith specific guid from the bucket\n\n\
        Parameters:\nguid (str): GUID of the schema.\nschema_firebase_repository (SchemaFirebaseRepository):\
        \ injected dependency for\n    interacting with the schema collection in firestore.\n\
        schema_processor_service (SchemaProcessorService): injected dependency for\n\
        \    interacting with the schema collection in firestore."
      operationId: get_schema_from_bucket_with_guid_v2_schema_get
      parameters:
      - required: false
        schema:
          title: Guid
          type: string
        name: guid
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Schema From Bucket With Guid V2 Schema Get
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Invalid parameter provided
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Unable to process request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: No schema found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/schema_metadata:
    get:
      summary: Get Schema Metadata Collection
      description: 'Get all schema metadata associated with a specific survey id.


        Parameters:

        survey_id (str): survey id of the collection

        schema_processor_service (SchemaProcessorService): injected dependency for
        processing the metadata collection.'
      operationId: get_schema_metadata_collection_v1_schema_metadata_get
      parameters:
      - required: false
        schema:
          title: Survey Id
          type: string
        name: survey_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Schema Metadata Collection V1 Schema Metadata
                  Get
                type: array
                items:
                  $ref: '#/components/schemas/SchemaMetadata'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Invalid search provided
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: Unable to process request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseModel'
              example:
                status: error
                message: No results found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    DatasetMetadata:
      title: DatasetMetadata
      required:
      - survey_id
      - period_id
      - form_types
      - title
      - sds_published_at
      - total_reporting_units
      - schema_version
      - sds_dataset_version
      - filename
      - dataset_id
      type: object
      properties:
        survey_id:
          title: Survey Id
          type: string
        period_id:
          title: Period Id
          type: string
        form_types:
          title: Form Types
          type: array
          items:
            type: string
        title:
          title: Title
          type: string
        sds_published_at:
          title: Sds Published At
          type: string
        total_reporting_units:
          title: Total Reporting Units
          type: integer
        schema_version:
          title: Schema Version
          type: string
        sds_dataset_version:
          title: Sds Dataset Version
          type: integer
        filename:
          title: Filename
          type: string
        dataset_id:
          title: Dataset Id
          type: string
    ExceptionResponseModel:
      title: ExceptionResponseModel
      required:
      - status
      - message
      type: object
      properties:
        status:
          title: Status
          type: string
        message:
          title: Message
          type: string
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    SchemaMetadata:
      title: SchemaMetadata
      required:
      - survey_id
      - schema_location
      - sds_schema_version
      - sds_published_at
      - schema_version
      - guid
      type: object
      properties:
        survey_id:
          title: Survey Id
          type: string
        schema_location:
          title: Schema Location
          type: string
        sds_schema_version:
          title: Sds Schema Version
          type: integer
        sds_published_at:
          title: Sds Published At
          type: string
        schema_version:
          title: Schema Version
          type: string
        guid:
          title: Guid
          type: string
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
